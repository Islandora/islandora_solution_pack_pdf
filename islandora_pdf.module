<?php

/*
 * @file
 * An Islandora module to handle basic pdf cmodels
 */

/**
 * Implements hook_menu().
 * If you need to add secondary tabs to either view or manage you would create a
 * hook_menu function similar to below.  You would also need to create an access function
 * to tell islandora when to show your tabs.  There is an example below.
 */
function islandora_pdf_menu() {
  $items = array();
  $items['admin/islandora/pdf'] = array(
    'title' => 'PDF Module',
    'description' => 'Configure the PDF solution pack.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_pdf_admin'),
    'file' => 'admin/islandora_pdf.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_theme().
 * We supply a pattern so we can overide templates at the theme level if needed.
 * we can append a pid to a template and the new template file will be called (the pids
 * colon should be replaced with a dash)
 * @return array
 */
function islandora_pdf_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_pdf' => array(
      'file' => 'theme/islandora_pdf.theme.inc',
      'template' => 'theme/islandora-pdf',
      'pattern' => 'islandora_pdf__', //we can add pids to the end of this pattern in our preprocess function
      // and templates will be able to have have a pid appended to the template name to overide a template on a per object basis
      //an example template would be named islandora-pdf--islandora-27.tpl.phps
      'variables' => array('islandora_object' => NULL),
    )
  );
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_pdf_islandora_required_objects() {

  // module path
  $module_path = drupal_get_path('module', 'islandora_pdf');

  return array(
    'islandora_pdf' => array(
      'title' => 'Islandora PDF',
      'objects' => array(
        array(
          'pid' => 'islandora:sp_pdf',
          'label' => 'Islandora PDF content model',
          'cmodel' => 'fedora-system:ContentModel-3.0',
          'datastreams' => array(
            array(
              'dsid' => 'DS-COMPOSITE-MODEL',
              'label' => 'DS-COMPOSITE-MODEL',
              'mimetype' => 'text/xml',
              'control_group' => 'X',
              'datastream_file' => "$module_path/xml/islandora_pdf_ds_composite_model.xml",
            ),
          ),
        ),
        array(
          'pid' => 'islandora:sp_pdf_collection',
          'label' => 'PDF collection',
          'cmodel' => 'islandora:collectionCModel',
          'parent' => 'islandora:root',
          'datastreams' => array(
            array(
              'dsid' => 'COLLECTION_POLICY',
              'label' => 'Collection policy',
              'mimetype' => 'text/xml',
              'control_group' => 'X',
              'datastream_file' => "$module_path/xml/islandora_pdf_collection_policy.xml",
            ),
            array(
              'dsid' => 'TN',
              'label' => 'Thumbnail',
              'mimetype' => 'image/png',
              'control_group' => 'M',
              'datastream_file' => "$module_path/images/folder.png",
            ),
          ),
        ),
      ),
    ),
  );
}

/**
 * tells the main module what types of objects we support.  This is used to determine whether or not
 * this module should attempt to respond.
 * @return array
 *   array of content model pids that this module supports
 */
function islandora_pdf_islandora_get_types() {
  $types = array();
  $types['islandora:sp_pdf'][ISLANDORA_VIEW_HOOK] = TRUE;
  return $types;
}

/**
 * this modules implentation of view_object hook will handle objects of type islandora:pdfCModel and  islandora:sp_pdf
 * as registered in its return types
 * Other modules would handle objects of other types.
 * @param Object $object
 *    a tuque fedora object
 * @param object $user
 * @param string $page_number
 * @param string $page_size
 * @return string
 *    themed html
 */
function islandora_pdf_islandora_view_object($object, $user, $page_number, $page_size) {
  $cmodel_list = islandora_pdf_islandora_get_types();
  $models = $object->models;
  foreach ($object->models as $model) {
    if (isset($cmodel_list[$model][ISLANDORA_VIEW_HOOK]) && $cmodel_list[$model][ISLANDORA_VIEW_HOOK] == TRUE) {
      $output = theme('islandora_pdf', array('islandora_object' => $object));
      return array('' => $output);
    }
  }
  return NULL;
}

function islandora_pdf_islandora_ingest_post_ingest($object) {
  $cmodel_list = islandora_pdf_islandora_get_types();
  if (!isset($cmodel_list)) {
    return ;
  }
  $models = $object->models;
  if (!isset($models)) {
    return ;
  }

  // If at least one of the object's models are present in our list of
  //   supported models, respond.
  if (array_intersect($models, array_keys($cmodel_list))) {
    module_load_include('inc', 'islandora_pdf', 'includes/pdf.process');
    islandora_pdf_create_all_derivatives($object);
  }
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_pdf_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_pdf');
  return array(
    'PDF MODS form' => array(
      'form_file' => "$module_path/xml/islandora_pdf_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 */
function islandora_pdf_islandora_content_model_forms_form_associations() {
  return array(
    'islandora_pdf_mods_form' => array(
      'content_model' => 'islandora:sp_pdf',
      'form_name' => 'PDF MODS form',
      'dsid' => 'MODS',
      'title_field' => "['titleInfo']['title']",
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}
